"use client"

import type React from "react"
import { useState } from "react"
import PageLayout from "@/components/page-layout"
import { signUpWithPhoneNumber, verifyPhoneNumber } from '@/lib/auth'
import { useToast } from '@/components/ui/use-toast'

export default function RegisterPage() {
  const [phoneNumber, setPhoneNumber] = useState("")
  const [verificationCode, setVerificationCode] = useState("")
  const [showVerification, setShowVerification] = useState(false)
  const { toast } = useToast()

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    const formattedPhone = "+61" + phoneNumber // Adding Australian country code
    
    try {
      const result = await signUpWithPhoneNumber(formattedPhone)
      if (result.success) {
        setShowVerification(true)
        toast({
          title: "Verification code sent",
          description: result.data?.isResend 
            ? "We've sent a new verification code."
            : "Please check your phone for the verification code.",
        })
      } else {
        if (result.error?.message?.includes('already registered')) {
          // Redirect to sign in page if user is already verified
          window.location.href = '/signin'
          return
        }
        toast({
          title: "Error",
          description: result.error?.message || "Failed to send verification code. Please try again.",
          variant: "destructive",
        })
      }
    } catch (error: any) {
      toast({
        title: "Error",
        description: error.message || "An unexpected error occurred. Please try again.",
        variant: "destructive",
      })
    }

  const handleVerify = async (e: React.FormEvent) => {
    e.preventDefault()
    const formattedPhone = "+61" + phoneNumber
    
    try {
      const result = await verifyPhoneNumber(formattedPhone, verificationCode)
      if (result.success) {
        toast({
          title: "Success",
          description: "Phone number verified successfully!",
        })
        // Redirect to demographics page after verification
        window.location.href = '/register/demographics'
      } else {
        toast({
          title: "Error",
          description: result.error?.message || "Failed to verify code. Please try again.",
          variant: "destructive",
        })
        setVerificationCode("")  // Clear the verification code on error
      }
    } catch (error: any) {
      toast({
        title: "Error",
        description: error.message || "An unexpected error occurred. Please try again.",
        variant: "destructive",
      })
      setVerificationCode("")  // Clear the verification code on error
    }
  }

  return (
    <PageLayout backHref="/" bottomContent={null}>
      <div className="bg-blue-50 rounded-lg p-5 mb-4">
        {!showVerification ? (
          <>
            <h1 className="text-xl sm:text-2xl font-bold mb-3">Enter your mobile number</h1>
            <p className="text-gray-700 mb-5 text-sm sm:text-base">
              We'll send a One-Time Passcode (OTP) via SMS for you to input on the next screen to verify your number.
            </p>

            <form onSubmit={handleSubmit}>
              <div className="flex items-center bg-white border border-gray-200 rounded-md p-3 mb-5">
                <span className="text-lg font-medium mr-2">+61</span>
                <input
                  type="tel"
                  value={phoneNumber}
                  onChange={(e) => setPhoneNumber(e.target.value)}
                  className="flex-1 outline-none text-lg"
                  placeholder="Phone number"
                  required
                />
              </div>

              <button type="submit" className="w-full bg-indigo-900 text-white rounded-md py-3 px-4 font-medium text-lg">
                Send code
              </button>
            </form>
          </>
        ) : (
          <>
            <h1 className="text-xl sm:text-2xl font-bold mb-3">Enter verification code</h1>
            <p className="text-gray-700 mb-5 text-sm sm:text-base">
              Please enter the verification code we sent to your phone number.
            </p>

            <form onSubmit={handleVerify}>
              <div className="flex items-center bg-white border border-gray-200 rounded-md p-3 mb-5">
                <input
                  type="text"
                  value={verificationCode}
                  onChange={(e) => setVerificationCode(e.target.value)}
                  className="flex-1 outline-none text-lg"
                  placeholder="Enter verification code"
                  required
                />
              </div>

              <button type="submit" className="w-full bg-indigo-900 text-white rounded-md py-3 px-4 font-medium text-lg">
                Verify code
              </button>
            </form>
          </>
        )}
      </div>
    </PageLayout>
  )
}
